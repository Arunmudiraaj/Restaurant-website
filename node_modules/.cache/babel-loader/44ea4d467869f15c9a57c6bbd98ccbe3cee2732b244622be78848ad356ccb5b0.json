{"ast":null,"code":"var _jsxFileName = \"D:\\\\arun learnings\\\\React Js\\\\Restaurant Website\\\\src\\\\context\\\\CartProvider.js\",\n  _s = $RefreshSig$();\nimport './cart-context';\nimport CartContext from './cart-context';\nimport { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartContext = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedTotal = state.totalAmount + action.item.price * action.item.amount;\n    const alreadyExistingItem = state.items.findIndex(item => item.id === action.item.id);\n    if (alreadyExistingItem === -1) {\n      const updatedItems = state.items.concat(action.item);\n      return {\n        items: updatedItems,\n        totalAmount: updatedTotal\n      };\n    } else {\n      state.items[alreadyExistingItem].amount += action.item.amount;\n      return {\n        items: state,\n        totalAmount: updatedTotal\n      };\n    }\n  }\n  if (action.type === \"REMOVE\") {}\n  return defaultCartContext;\n};\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartContext);\n  const addItemHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n  const removeItemHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: [\" \", props.children, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 12\n  }, this);\n};\n_s(CartProvider, \"ubCWedBnM9CAFcPRhKnAzDJnMuU=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["CartContext","useReducer","defaultCartContext","items","totalAmount","cartReducer","state","action","type","updatedTotal","item","price","amount","alreadyExistingItem","findIndex","id","updatedItems","concat","CartProvider","props","cartState","dispatchCartAction","addItemHandler","removeItemHandler","cartContext","addItem","removeItem","children"],"sources":["D:/arun learnings/React Js/Restaurant Website/src/context/CartProvider.js"],"sourcesContent":["import './cart-context'\r\nimport CartContext from './cart-context'\r\nimport { useReducer } from 'react'\r\n\r\nconst defaultCartContext = {\r\n    items : [],\r\n    totalAmount: 0\r\n}\r\n\r\nconst cartReducer = (state,action)=>{\r\n    if (action.type===\"ADD\"){\r\n       \r\n       const updatedTotal = state.totalAmount + (action.item.price * action.item.amount)\r\n\r\n       const alreadyExistingItem = state.items.findIndex(item => item.id===action.item.id)\r\n       if (alreadyExistingItem===-1){\r\n        const updatedItems = state.items.concat(action.item)\r\n        return {\r\n            items : updatedItems,\r\n            totalAmount : updatedTotal\r\n           }\r\n       }\r\n       else{\r\n            state.items[alreadyExistingItem].amount+=action.item.amount\r\n            return {\r\n                items : state,\r\n                totalAmount : updatedTotal\r\n            }\r\n       }\r\n       \r\n       \r\n    }\r\n    if (action.type===\"REMOVE\"){\r\n        \r\n    }\r\n    return defaultCartContext\r\n}\r\n\r\nconst CartProvider = props=>{\r\n    \r\n    const [cartState, dispatchCartAction]  = useReducer(cartReducer,defaultCartContext)\r\n    const addItemHandler = (item)=>{\r\n        dispatchCartAction({type: 'ADD', item: item})\r\n    }\r\n    const removeItemHandler = (id)=>{\r\n        dispatchCartAction({type: 'REMOVE', id: id})\r\n    }\r\n    const cartContext = {\r\n        items : cartState.items,\r\n        totalAmount : cartState.totalAmount,\r\n        addItem : addItemHandler,\r\n        removeItem : removeItemHandler\r\n    }\r\n    return <CartContext.Provider value={cartContext}> {props.children} </CartContext.Provider>\r\n}\r\nexport default CartProvider"],"mappings":";;AAAA,OAAO,gBAAgB;AACvB,OAAOA,WAAW,MAAM,gBAAgB;AACxC,SAASC,UAAU,QAAQ,OAAO;AAAA;AAElC,MAAMC,kBAAkB,GAAG;EACvBC,KAAK,EAAG,EAAE;EACVC,WAAW,EAAE;AACjB,CAAC;AAED,MAAMC,WAAW,GAAG,CAACC,KAAK,EAACC,MAAM,KAAG;EAChC,IAAIA,MAAM,CAACC,IAAI,KAAG,KAAK,EAAC;IAErB,MAAMC,YAAY,GAAGH,KAAK,CAACF,WAAW,GAAIG,MAAM,CAACG,IAAI,CAACC,KAAK,GAAGJ,MAAM,CAACG,IAAI,CAACE,MAAO;IAEjF,MAAMC,mBAAmB,GAAGP,KAAK,CAACH,KAAK,CAACW,SAAS,CAACJ,IAAI,IAAIA,IAAI,CAACK,EAAE,KAAGR,MAAM,CAACG,IAAI,CAACK,EAAE,CAAC;IACnF,IAAIF,mBAAmB,KAAG,CAAC,CAAC,EAAC;MAC5B,MAAMG,YAAY,GAAGV,KAAK,CAACH,KAAK,CAACc,MAAM,CAACV,MAAM,CAACG,IAAI,CAAC;MACpD,OAAO;QACHP,KAAK,EAAGa,YAAY;QACpBZ,WAAW,EAAGK;MACf,CAAC;IACL,CAAC,MACG;MACCH,KAAK,CAACH,KAAK,CAACU,mBAAmB,CAAC,CAACD,MAAM,IAAEL,MAAM,CAACG,IAAI,CAACE,MAAM;MAC3D,OAAO;QACHT,KAAK,EAAGG,KAAK;QACbF,WAAW,EAAGK;MAClB,CAAC;IACN;EAGH;EACA,IAAIF,MAAM,CAACC,IAAI,KAAG,QAAQ,EAAC,CAE3B;EACA,OAAON,kBAAkB;AAC7B,CAAC;AAED,MAAMgB,YAAY,GAAGC,KAAK,IAAE;EAAA;EAExB,MAAM,CAACC,SAAS,EAAEC,kBAAkB,CAAC,GAAIpB,UAAU,CAACI,WAAW,EAACH,kBAAkB,CAAC;EACnF,MAAMoB,cAAc,GAAIZ,IAAI,IAAG;IAC3BW,kBAAkB,CAAC;MAACb,IAAI,EAAE,KAAK;MAAEE,IAAI,EAAEA;IAAI,CAAC,CAAC;EACjD,CAAC;EACD,MAAMa,iBAAiB,GAAIR,EAAE,IAAG;IAC5BM,kBAAkB,CAAC;MAACb,IAAI,EAAE,QAAQ;MAAEO,EAAE,EAAEA;IAAE,CAAC,CAAC;EAChD,CAAC;EACD,MAAMS,WAAW,GAAG;IAChBrB,KAAK,EAAGiB,SAAS,CAACjB,KAAK;IACvBC,WAAW,EAAGgB,SAAS,CAAChB,WAAW;IACnCqB,OAAO,EAAGH,cAAc;IACxBI,UAAU,EAAGH;EACjB,CAAC;EACD,oBAAO,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEC,WAAY;IAAA,WAAC,GAAC,EAACL,KAAK,CAACQ,QAAQ,EAAC,GAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QAAuB;AAC9F,CAAC;AAAA,GAhBKT,YAAY;AAAA,KAAZA,YAAY;AAiBlB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}